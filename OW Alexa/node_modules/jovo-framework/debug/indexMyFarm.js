'use strict';

// =================================================================================
// The below code is used to set up a server and a webhook at /webhook.
// Danger Zone: Editing might break your app.
// =================================================================================

const app = require('../index').Jovo;
const webhook = require('../index').Webhook;
// // Add DynamoDB as a database
// let awsConfig = {
// 	accessKeyId: '',
//     secretAccessKey: '',
//     region: 'us-east-1'
// };
// app.setDynamoDb('TestDatabase', awsConfig);

// app.setDynamoDb('MyFarm');

let intentMap = {
	'AMAZON.YesIntent': 'YesIntent',
	'AMAZON.NoIntent': 'NoIntent',
	'AMAZON.HelpIntent': 'NoIntent',
	'AMAZON.Cancel': 'END',
};
app.setIntentMap(intentMap);

let animalRevenue = {
	'cows': 1,
};

let cowPrice = [
	100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200, 102400, 204800, 409600,
];
//
// exports.handler = function(event, context, callback) {
//     app.handleRequest(event, callback, handlers);
//     app.execute();
// };
app.enableRequestLogging();
app.enableResponseLogging();
webhook.listen(3000, function() {
    console.log('Example server listening on port 3000!');
});

webhook.post('/webhook', function(req, res) {
    app.handleRequest(req, res, handlers);
    app.execute();
});
// =================================================================================
// Below is where the logic of your voice app should be happening
// Get started by adding some intents and Jovo functions
// =================================================================================


let handlers = {

    'LAUNCH': function() {
        app.db().load('userData', function(err, data) {
			if (err) {
				// Very first session
				if (err.code === 'ERR_MAIN_KEY_NOT_FOUND') {
					let userData = {
						score: 100, // dollars
						cows: 0,
						multiplier: 1, // dollars per minute
						fields: 1, // ares
						lastUsed: new Date(app.request.request.timestamp).toISOString(),
						onboarding: true,
					};	
					// Save new user to database
					app.db().save('userData', userData, function(err) {
						if (err) {
							console.log(err);
							app.tell('DB is not working.');
						}						else {
							let speech = app.speechBuilder()
							.addText('Welcome to My Farm!')
							.addText('Here you are, at the beginning of your career as a successful farmer.')
							.addText('You own 1 are of land, and one hundred dollars.')
							.addText('This is just enough for your first cow!')
							.addText('Do you want to buy one?')
							.build();
						let reprompt = 'Please say yes if you want to buy your first cow';

						app.followUpState('OnbardingState')
							.ask(speech, reprompt);
						}
					});
				}				else {
					app.tell('Sorry, something went wrong');
				}
			}

			// Returning session
			else {
				// How many minutes have passed since last used?
				let now = new Date(app.request.request.timestamp);
				let lastUsed = new Date(data.lastUsed);
				let difference = (now - lastUsed)/60000;
				data.lastUsed = now.toISOString();

				// Calculate the new score with time difference, cows, and multiplier
				let idleScore = parseFloat(difference.toFixed(2) * (data.cows*animalRevenue.cows) * data.multiplier);
			   	data.score += idleScore;
			   	data.score = parseFloat(data.score.toFixed(2));

				app.db().save('userData', data, function(err) {
					let speech = app.speechBuilder()
						.addText('Welcome back to your farm.')
						.addText('You have earned')
						.addText(moneyToSpeech(idleScore))
						.addText('since your last visit.')
						.addBreak('300ms');
					if (data.score != idleScore) {
					speech.addText('You\'re now at')
							.addText(moneyToSpeech(data.score) + '.');
					}
					if (data.score < cowPrice[data.cows]) {
						speech = speech.addBreak('200ms')
									.addText('You need ' + cowPrice[data.cows] + ' dollars to buy your next cow.')
									.build();
					 	app.tell(speech);
					}					else {
						speech = speech.addText('Do you want to buy a cow?')
							.build();
						let reprompt = 'Please say yes if you want to buy that cow.';
						app.followUpState('BuyState').ask(speech, reprompt);
					}
				});
			}
		});
    }, // end LAUNCH


    'OnbardingState': {
    	'YesIntent': function() {
    		app.db().load('userData', function(err, data) {
    			data.score = 0;
    			data.cows = 1;
    			data.lastUsed = new Date(app.request.request.timestamp).toISOString();

    			app.db().save('userData', data, function(err) {
    				let speech = app.speechBuilder()
			        	.addText('Yay, you just traded in 100 dollars for your first cow.')
			        	.addText('Cows bring in about ' + animalRevenue.cows + ' dollar per minute.')
			        	.addText('Let it eat for a little while and come back in a few hours to receive your day\'s payout.')
			        	.addText('You can buy your next cow at ' + cowPrice[data.cows] + ' dollars!')
			        	.build();
			        app.tell(speech);
  				});
    		});
    	}, // end YesIntent

    	'NoIntent': function() {
    		app.endSession();
    	},
    }, // end OnboardingState


    'BuyState': {
    	'YesIntent': function() {
			app.db().load('userData', function(err, data) {
				if (data.score > cowPrice[data.cows]) {
					data.score -= cowPrice[data.cows];
					data.cows += 1;
					app.db().save('userData', data, function(err) {
						let speech = app.speechBuilder()
							.addText('Congrats! You bought cow number' + data.cows + '.')
							.addText('You have ' + moneyToSpeech(data.score) + ' left.');
							if (data.score < cowPrice[data.cows]) {
								speech = speech.addText('You can buy your next cow at ' + cowPrice[data.cows] + ' dollars.')
											.build();
								app.tell(speech);
							}							else {
								speech = speech.addText('Do you want to buy another one?')
											.build();
								let reprompt = 'Do you want to buy another one?';
								app.followUpState('BuyState').ask(speech, reprompt);
							}
					});
				}				else {
					app.tell('You don\'t have enough money. Please come back later.');
				}
			});
	    },

	    'NoIntent': function() {
			app.tell('No problem. Say tell my farm to buy a cow, if you change your mind.');
	    },

	    'BuyIntent': function() {
	    	app.toStateIntent('BuyState', 'YesIntent');
	    },

    }, // end BuyState


    // Default intents without state

    'BuyIntent': function() {
    	app.db().load('userData', function(err, data) {
    		if (err) {
    			app.toIntent('LAUNCH');
    		}
    		if (data.score < cowPrice[data.cows]) {
    			let speech = 'You need ' + cowPrice[data.cows] + ' to buy your next cow. Come back later!';
    			app.tell(speech);
    		}    		else {
    			let speech = app.speechBuilder()
    				.addText('You have enough money to buy a cow at ')
    				.addText(cowPrice[data.cows] + ' dollars.')
    				.addText('Do you want to do it?')
    				.build();
    			let reprompt = 'Please say yes if you want to buy this cow';
    			app.followUpState('BuyState').ask(speech, reprompt);
    		}
    	});
    },

    'WalletIntent': function() {
    	app.db().load('userData', function(err, data) {
    		if (err) {
    			app.toIntent('LAUNCH');
    		}
    		let speech = app.speechBuilder()
    			.addText('You have ' + moneyToSpeech(data.score) + ' in your wallet.')
    			.build();
    		app.tell(speech);
    	});
    },

    'HelpIntent': function() {
		let speech = app.speechBuilder()
			.addText('My Farm is an idle game. This means your cows are working for you while you\'re away.')
			.addText('When you\'re coming back, you can say either')
			.addBreak('100ms')
			.addText('buy a cow, or')
			.addBreak('100ms')
			.addText('open my wallet.')
			.addText('Do you want to do this now?')
			.build();
		let reprompt = 'Either say, buy a cow, or open my wallet';
		app.ask(speech, reprompt);
    },

    'YesIntent': function() {
		app.toIntent('LAUNCH');
    },

    'NoIntent': function() {
		app.toIntent('LAUNCH');
    },

    'END': function() {
		app.tell('Goodbye! Come back tomorrow to feed your animals and receive your payout.');
    },


};


function moneyToSpeech(amount) {
	let dollars = Math.floor(amount);
   	let cents = (100 - (Math.ceil(amount) - amount)*100).toFixed(0);

   	let text = '';

   	if (dollars > 0) {
		text = dollars;
		if (dollars == 1) {
			text += ' dollar';
		}		else {
			text += ' dollars';
		}
		if (cents > 0 && cents != 100) {
			text += ' and ';
		}
	}
	if (cents > 0 && cents != 100) {
		text += cents;
		if (cents == 1) {
			text += ' cent';
		}		else {
			text += ' cents';
		}
	}
	return text;
}
