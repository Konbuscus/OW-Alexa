const ora = require('ora');

// let RequestBuilderAlexaSkill = require('./requestBuilderAlexaSkill').RequestBuilderAlexaSkill;
let WebhookTest = require('./webhookTest').WebhookTest;


/**
 * Webhook logic tester
 */
class Testkit {
    /**
     * Constructor
     * @param {{}} config
     */
    constructor(config) {
        this.webhookUrl = config && config.webhookUrl ? config.webhookUrl : 'http://localhost:3000/webhook';
        this.webhookTest = new WebhookTest({webhookUrl: this.webhookUrl});
        this.run(test);
    }

    /**
     * Runs test
     * @param {*} test
     */
    run(test) {
        let spinner = ora('Running: '+ test.name).start();
        let promise; // eslint-disable-line
        let t = this.webhookTest;
        for (let i = 0; i < test.steps.length; i++) {
            let step = test.steps[i];

            promise = t.nextStep(step)
                .then((response) => {
                    if (response.getSpeechText() !== step.expectedSpeech) {
                        spinner.fail(step.name+': Fail');
                    } else {
                        spinner.succeed(step.name+': Pass');
                    }

                    if (i < test.steps.length-1) {
                        return t.nextStep(test.steps[i+1]);
                    } else {
                        return t.end();
                    }
                });
        }
        // spinner.succeed('Test successful');
    }
}

// in webhookTest.js

// /**
//  * Testkit (work-in-progress)
//  * @param {*} step
//  * @return {Promise}
//  */
// nextStep(step) {
//     if (step.type === 'LAUNCH') {
//         return this.testLaunch();
//     } else if (step.type === 'INTENT') {
//         return this.testIntent(step.intent.name);
//     }
// }


module.exports.Testkit = Testkit;

let test = {
    name: 'Test1',
    description: 'Tests basic launch',
    steps: [
        {
            name: 'Launch Request',
            type: 'LAUNCH',
            expectedSpeech: 'App launched',
        },
        {
            name: 'Intent Request',
            type: 'INTENT',
            intent: {
                name: 'HelloWorld',
            },
            expectedSpeech: 'Hello World',
        },
        {
            name: 'Good Bye Intent',
            type: 'INTENT',
            intent: {
                name: 'GoodBye',
            },
            expectedSpeech: 'Hello World',
        },
    ],
};
