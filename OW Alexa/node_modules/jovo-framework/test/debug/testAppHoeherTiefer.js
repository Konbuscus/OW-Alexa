'use strict';
let chai = require('chai');
let chaiAsPromised = require('chai-as-promised');
let expect = chai.expect;

let WebhookTester = require('../../lib/tools/webhookTest').WebhookTest;

chai.use(chaiAsPromised);
chai.should();


describe('Höher Tiefer Test', function() {
    it.skip('Zufällige Angabe von "Höher", "Tiefer" und "Gleich"', function() {
        let test = new WebhookTester();
        let promise = test.testLaunch();

        // test launch
        promise = promise.then((response) => {
            expect(response.isAsk('Willkommen bei Höher-Tiefer. Sage Neustart um ein neues Spiel zu beginnen'))
                .to.equal(true);
            return test.testIntent('RestartIntent');
        });

        // test start intent
        promise = promise.then((response) => { // In RestartIntent
            expect(response.speechTextContains('Das Spiel wird gestartet.'))
                .to.equal(true);
            return test.testIntent('HigherIntent');
        });

        let intentCheck = 'HigherIntent';
        let items = ['HigherIntent', 'LowerIntent', 'EqualIntent'];
        for (let i = 0; i < 51; i++) {
            promise = promise.then((response) => {
                if (intentCheck === 'HigherIntent') {
                    higherCheck(response);
                }
                if (intentCheck === 'LowerIntent') {
                    lowerCheck(response);
                }
                if (intentCheck === 'EqualIntent') {
                    equalCheck(response);
                }

                intentCheck = items[Math.floor(Math.random()*items.length)];

                return test.testIntent(intentCheck);
            });
        }

        // test gameover intent
        promise = promise.then((response) => { // In GameOverIntent
            expect(response.speechTextContains('Das Spiel ist aus.'))
                .to.equal(true);
            return test.end();
        });
        return promise;
    });
});
/**
 * Checks if higher intent is correct
 * @param {*} response
 */
function higherCheck(response) {
    let lastCardValue = response.getSessionAttribute('lastCard').value;
    let nextCardValue = response.getSessionAttribute('nextCard').value;

    console.log('HigherIntent');
    console.log(lastCardValue+ ' -> ' + nextCardValue);
    console.log(response.getSpeechText());
    console.log();
    if (lastCardValue > nextCardValue) {
        expect(response.speechTextContains('Trink du Spast.'))
            .to.equal(true);
    } else if (lastCardValue < nextCardValue) {
        expect(response.speechTextContains('Du bist gut.'))
            .to.equal(true);
    } else if (lastCardValue === nextCardValue) {
        expect(response.speechTextContains('Voller Cup.'))
            .to.equal(true);
    }
    console.log(response.getSessionAttribute('nextCard').label);
    expect(response.hasSimpleCard(
        'Letzte Karte',
        response.getSessionAttribute('nextCard').label
    )).to.equal(true);
}

/**
 * Checks if lower intent is correct
 * @param {*} response
 */
function lowerCheck(response) {
    let lastCardValue = response.getSessionAttribute('lastCard').value;
    let nextCardValue = response.getSessionAttribute('nextCard').value;

    console.log('LowerIntent');
    console.log(lastCardValue+ ' -> ' + nextCardValue);
    console.log(response.getSpeechText());
    console.log();
    if (lastCardValue < nextCardValue) {
        expect(response.speechTextContains('Trink du Spast.'))
            .to.equal(true);
    } else if (lastCardValue > nextCardValue) {
        expect(response.speechTextContains('Du bist gut.'))
            .to.equal(true);
    } else if (lastCardValue === nextCardValue) {
        expect(response.speechTextContains('Voller Cup.'))
            .to.equal(true);
    }
    expect(response.hasSimpleCard(
        'Letzte Karte',
        response.getSessionAttribute('nextCard').label
    )).to.equal(true);
}

/**
 * Checks if equal intent is correct
 * @param {*} response
 */
function equalCheck(response) {
    let lastCardValue = response.getSessionAttribute('lastCard').value;
    let nextCardValue = response.getSessionAttribute('nextCard').value;

    console.log('EqualIntent');
    console.log(lastCardValue+ ' -> ' + nextCardValue);
    console.log(response.getSpeechText());
    console.log();
    if (lastCardValue !== nextCardValue) {
        expect(response.speechTextContains('Voller Cup.'))
            .to.equal(true);
    } else if (lastCardValue === nextCardValue) {
        expect(response.speechTextContains('Das gibt die Maß.'))
            .to.equal(true);
    }
    expect(response.hasSimpleCard(
        'Letzte Karte',
        response.getSessionAttribute('nextCard').label
    )).to.equal(true);
}
